# $Id: Makefile,v 1.31 2007/09/18 01:26:50 deraugla Exp $

include ../config/Makefile

INCLUDES=-I ../main -I ../boot
OCAMLCFLAGS=-warn-error A $(INCLUDES)
OBJS=pa_o.cmo pa_op.cmo pa_oop.cmo pa_sml.cmo pa_lisp.cmo pa_scheme.cmo pa_extfold.cmo pa_extfun.cmo pa_extprint.cmo pa_fstream.cmo pa_lefteval.cmo pa_pragma.cmo pr_r.cmo pr_ro.cmo pr_rp.cmo pr_o.cmo pr_op.cmo pr_scheme.cmo pr_schemep.cmo pr_extend.cmo pr_extfun.cmo pr_null.cmo pr_depend.cmo q_phony.cmo
CAMLP5OM=pa_o.cmo pa_op.cmo ../meta/pr_dump.cmo
CAMLP5SCHM=pa_scheme.cmo ../meta/pr_dump.cmo
CAMLP5OMX=pa_o.cmx pa_op.cmx ../meta/pr_dump.cmx
SHELL=/bin/sh
COUT=$(OBJS) $(NAME)o$(EXE) $(NAME)sch$(EXE)
COPT=$(NAME)o.opt

all: $(COUT) mk$(NAME).sh
opt: $(COPT)

pr_rp_old.cmo: parserify.cmo pr_rp_main.cmo
	$(OCAMLC) parserify.cmo pr_rp_main.cmo -a -o $@

pr_op_old.cmo: parserify.cmo pr_op_main.cmo
	$(OCAMLC) parserify.cmo pr_op_main.cmo -a -o $@

pr_schemep.cmo: parserify.cmo pr_schp_main.cmo
	$(OCAMLC) parserify.cmo pr_schp_main.cmo -a -o $@

$(NAME)o$(EXE): ../main/$(NAME)$(EXE) $(CAMLP5OM)
	rm -f $(NAME)o$(EXE)
	cd ../main; $(MAKE) CAMLP5=../etc/$(NAME)o$(EXE) CAMLP5M="-I ../etc $(CAMLP5OM)"

$(NAME)sch$(EXE): ../main/$(NAME)$(EXE) $(CAMLP5SCHM)
	rm -f $(NAME)sch$(EXE)
	cd ../main; $(MAKE) CAMLP5=../etc/$(NAME)sch$(EXE) CAMLP5M="-I ../etc $(CAMLP5SCHM)"

$(NAME)o.opt: $(CAMLP5OMX)
	rm -f $(NAME)o.opt
	cd ../main; $(MAKE) optp5 CAMLP5OPT=../etc/$(NAME)o.opt CAMLP5M="-I ../etc $(CAMLP5OMX)"

mk$(NAME).sh: mkcamlp5.sh.tpl
	sed -e "s!LIBDIR!$(LIBDIR)!g" -e "s/camlp5/$(NAME)/g" mkcamlp5.sh.tpl > mk$(NAME).sh

bootstrap_scheme:
	@$(MAKE) bootstrap_l L=scheme | grep -v directory
compare_scheme:
	@$(MAKE) compare_l L=scheme | grep -v directory
bootstrap_lisp:
	@$(MAKE) bootstrap_l L=lisp | grep -v directory
compare_lisp:
	@$(MAKE) compare_l L=lisp | grep -v directory

bootstrap_l:
	ocamlrun$(EXE) ../boot/$(NAME) ./pa_$Lr.cmo -I ../boot pa_extend.cmo ./pr_r.cmo ./pr_extend.cmo ./pr_rp.cmo ./q_phony.cmo pa_$L.ml > tmp
	mv pa_$Lr.ml pa_$Lr.ml.old
	sed -e 's/^;; \(.*\)$$/(* \1 *)/' -e 's/^; \(.*\)$$/(* \1 *)/' -e 's|./pa_$Lr.cmo|pa_r.cmo pa_rp.cmo|' -e 's/$$Id.*\$$/File generated by pretty print; do not edit!/' tmp > pa_$Lr.ml
	rm -f tmp

compare_l:
	ocamlrun$(EXE) ../boot/$(NAME) ./pa_$Lr.cmo -I ../boot pa_extend.cmo ./pr_r.cmo ./pr_extend.cmo ./pr_rp.cmo ./q_phony.cmo pa_$L.ml | sed -e 's/^;; \(.*\)$$/(* \1 *)/' -e 's/^; \(.*\)$$/(* \1 *)/' -e 's|./pa_$Lr.cmo|pa_r.cmo pa_rp.cmo|' -e 's/$$Id.*\$$/File generated by pretty print; do not edit!/' | diff -c pa_$Lr.ml -

clean::
	rm -f *.cm* *.pp[io] *.o *.bak .*.bak *.out *.opt
	rm -f mk$(NAME).sh $(NAME)o$(EXE) $(NAME)sch$(EXE)

depend:
	cp .depend .depend.bak
	> .depend
	@export LC_ALL=C; for i in $$(ls *.mli *.ml); do \
	  NAME=$(NAME) ../tools/depend.sh $(INCLUDES) $$i | \
	  sed -e 's| $(OTOP)| $$(OTOP)|g' >> .depend; \
	done

get_promote:

install:
	-$(MKDIR) "$(DESTDIR)$(LIBDIR)/$(NAME)" "$(DESTDIR)$(BINDIR)"
	cp $(OBJS) "$(DESTDIR)$(LIBDIR)/$(NAME)/."
	cp lib.sml "$(DESTDIR)$(LIBDIR)/$(NAME)/."
	cp $(NAME)o$(EXE) $(NAME)sch$(EXE) "$(DESTDIR)$(BINDIR)/."
	if test -f $(COPT); then cp $(COPT) "$(DESTDIR)$(BINDIR)/."; fi

pa_lisp.cmo: pa_lispr.cmo
pa_scheme.cmo: pa_schemer.cmo
pr_extend.cmo: pa_extfun.cmo pa_extprint.cmo
pr_o.cmo: pa_extfun.cmo pa_extprint.cmo
pr_op.cmo: pa_extfun.cmo pa_extprint.cmo
pr_r.cmo: pa_extfun.cmo pa_extprint.cmo
pr_ro.cmo: pa_extfun.cmo pa_extprint.cmo
pr_rp.cmo: pa_extfun.cmo pa_extprint.cmo
q_phony.cmo: pa_extfun.cmo pa_extprint.cmo

include .depend
