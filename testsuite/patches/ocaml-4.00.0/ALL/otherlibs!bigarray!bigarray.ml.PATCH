--- /home/chetsky/Hack/Ocaml/GENERIC/4.00.0/.opam-switch/sources/ocaml-base-compiler.4.00.0/otherlibs/bigarray/bigarray.ml	2012-05-06 01:23:37.000000000 -0700
+++ patches/ocaml-4.00.0/ALL/otherlibs!bigarray!bigarray.ml.INPUT	2020-02-11 14:03:35.838714265 -0800
@@ -16,8 +16,9 @@
 (* Module [Bigarray]: large, multi-dimensional, numerical arrays *)
 
 external init : unit -> unit = "caml_ba_init"
+;;
 
-let _ = init()
+init() ;;
 
 type ('a, 'b) kind = int
 
@@ -227,23 +228,24 @@
 let array3_of_genarray a =
   if Genarray.num_dims a = 3 then a
   else invalid_arg "Bigarray.array3_of_genarray"
-
+;;
 external reshape:
    ('a, 'b, 'c) Genarray.t -> int array -> ('a, 'b, 'c) Genarray.t
    = "caml_ba_reshape"
+;;
 let reshape_1 a dim1 = reshape a [|dim1|]
 let reshape_2 a dim1 dim2 = reshape a [|dim1;dim2|]
 let reshape_3 a dim1 dim2 dim3 = reshape a [|dim1;dim2;dim3|]
-
+;;
 (* Force caml_ba_get_{1,2,3,N} to be linked in, since we don't refer
    to those primitives directly in this file *)
 
-let _ =
   let _ = Genarray.get in
   let _ = Array1.get in
   let _ = Array2.get in
   let _ = Array3.get in
   ()
+;;
 
 external get1: unit -> unit = "caml_ba_get_1"
 external get2: unit -> unit = "caml_ba_get_2"
