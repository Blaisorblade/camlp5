--- /home/chet/Hack/Ocaml/GENERIC/4.00.0/.opam-switch/sources/ocaml-base-compiler.4.00.0/testsuite/tests/basic/sets.ml	2011-07-27 07:17:02.000000000 -0700
+++ patches/ocaml-4.00.0/ALL/testsuite!tests!basic!sets.ml.INPUT	2020-02-11 17:38:10.952384894 -0800
@@ -17,12 +17,12 @@
 let even = List.fold_right IntSet.add [0; -2; 2; 4; 6; -10] IntSet.empty
 
 let odd = List.fold_right IntSet.add [9; -7; 5; 1; -3] IntSet.empty
+;;
 
-let _ =
   for i = -10 to 10 do
     Printf.printf "%d  %B  %B\n" i (IntSet.mem i even) (IntSet.mem i odd)
   done
-
+;;
 module PowerSet(BaseSet: Set.S)
                (SetOrd: functor(S: Set.S) -> Set.OrderedType) =
   Set.Make(SetOrd(BaseSet))
@@ -30,10 +30,10 @@
 module IntSetSet = PowerSet(IntSet)(functor (S: Set.S) -> S)
 
 let setofset = List.fold_right IntSetSet.add [even; odd] IntSetSet.empty
+;;
 
-let _ =
   List.iter
     (fun s -> Printf.printf "%B\n" (IntSetSet.mem s setofset))
     [IntSet.empty; even; odd; IntSet.union even odd]
-
-let _ = exit 0
+;;
+exit 0 ;;
