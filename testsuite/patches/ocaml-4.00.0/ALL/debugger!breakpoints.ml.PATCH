--- /home/chetsky/Hack/Ocaml/GENERIC/4.00.0/.opam-switch/sources/ocaml-base-compiler.4.00.0/debugger/breakpoints.ml	2011-07-27 07:17:02.000000000 -0700
+++ patches/ocaml-4.00.0/ALL/debugger!breakpoints.ml.INPUT	2020-02-11 10:31:06.623675585 -0800
@@ -67,7 +67,7 @@
    []
   end
     @
-  List.map fst (List.filter (function (_, {ev_pos = pos}) -> pos = pc) !breakpoints)
+  List.map fst (List.filter (fun (_, {ev_pos = pos}) -> pos = pc) !breakpoints)
 
 (* Is there a breakpoint at `pc' ? *)
 let breakpoint_at_pc pc =
@@ -80,7 +80,7 @@
   if !debug_breakpoints then
     (print_string "Removing breakpoints..."; print_newline ());
   List.iter
-    (function (pos, _) ->
+    (fun (pos, _) ->
        if !debug_breakpoints then begin
          print_int pos;
          print_newline()
@@ -94,7 +94,7 @@
   if !debug_breakpoints then
     (print_string "Setting breakpoints..."; print_newline ());
   List.iter
-    (function (pos, _) ->
+    (fun (pos, _) ->
        if !debug_breakpoints then begin
          print_int pos;
          print_newline()
@@ -113,14 +113,14 @@
   end;
   if !current_checkpoint.c_breakpoint_version <> !current_version then
     Exec.protect
-      (function () ->
+      (fun () ->
          remove_breakpoints !current_checkpoint.c_breakpoints;
          set_breakpoints !positions;
          copy_breakpoints ())
 
 let change_version version pos =
   Exec.protect
-    (function () ->
+    (fun () ->
        current_version := version;
        positions := pos)
 
@@ -165,7 +165,7 @@
       new_breakpoint (Symbols.any_event_at_pc !pc)
   | event ->
       Exec.protect
-        (function () ->
+        (fun () ->
            incr breakpoint_number;
            insert_position event.ev_pos;
            breakpoints := (!breakpoint_number, event) :: !breakpoints);
@@ -179,7 +179,7 @@
     let ev = List.assoc number !breakpoints in
     let pos = ev.ev_pos in
       Exec.protect
-        (function () ->
+        (fun () ->
            breakpoints := List.remove_assoc number !breakpoints;
            remove_position pos;
            printf "Removed breakpoint %d at %d : %s" number ev.ev_pos
@@ -192,7 +192,7 @@
       raise Not_found
 
 let remove_all_breakpoints () =
-  List.iter (function (number, _) -> remove_breakpoint number) !breakpoints
+  List.iter (fun (number, _) -> remove_breakpoint number) !breakpoints
 
 (*** Temporary breakpoints. ***)
 
@@ -215,7 +215,7 @@
         end
 
     in
-      Exec.protect (function () -> insert_position pc);
+      Exec.protect (fun () -> insert_position pc);
       temporary_breakpoint_position := Some pc;
       try
         funct ();
