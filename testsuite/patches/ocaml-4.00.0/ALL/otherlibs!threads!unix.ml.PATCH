--- /home/chet/Hack/Ocaml/GENERIC/4.00.0/.opam-switch/sources/ocaml-base-compiler.4.00.0/otherlibs/threads/unix.ml	2011-12-13 08:18:13.000000000 -0800
+++ patches/ocaml-4.00.0/ALL/otherlibs!threads!unix.ml.INPUT	2020-02-11 17:23:47.752559993 -0800
@@ -51,10 +51,12 @@
 let select_aux arg = thread_select arg
 let wait_pid_aux pid = thread_wait_pid pid
 let delay duration = thread_delay duration
+;;
 
 (* Make sure that threads are initialized (PR#1516). *)
 
-let _ = thread_initialize()
+thread_initialize()
+;;
 
 (* Back to the Unix module *)
 
@@ -130,12 +132,13 @@
   | EUNKNOWNERR of int
 
 exception Unix_error of error * string * string
-
-let _ = Callback.register_exception "Unix.Unix_error"
+;;
+Callback.register_exception "Unix.Unix_error"
                                     (Unix_error(E2BIG, "", ""))
+;;
 
 external error_message : error -> string = "unix_error_message"
-
+;;
 let handle_unix_error f arg =
   try
     f arg
@@ -978,7 +981,7 @@
   | Process_out of out_channel
   | Process_full of in_channel * out_channel * in_channel
 
-let popen_processes = (Hashtbl.create 7 : (popen_process, int) Hashtbl.t)
+let popen_processes : (popen_process, int) Hashtbl.t = Hashtbl.create 7
 
 let open_proc cmd proc input output toclose =
   match fork() with
