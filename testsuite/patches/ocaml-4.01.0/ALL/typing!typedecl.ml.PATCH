--- /home/chetsky/Hack/Ocaml/GENERIC/4.01.0/.opam-switch/sources/ocaml-base-compiler.4.01.0/typing/typedecl.ml	2013-07-30 19:18:46.000000000 -0700
+++ patches/ocaml-4.01.0/ALL/typing!typedecl.ml.INPUT	2020-02-16 00:05:52.923807516 -0800
@@ -1036,7 +1036,7 @@
   if arity_ok then
     List.iter2 (Ctype.unify_var env) params orig_decl.type_params;
   let constraints = List.map
-    (function (ty, ty', loc) ->
+    (fun (ty, ty', loc) ->
        try
          let cty = transl_simple_type env false ty in
          let cty' = transl_simple_type env false ty' in
@@ -1208,9 +1208,9 @@
         (fun ppf -> fprintf ppf "is not compatible with type")
   | Type_clash (env, trace) ->
       Printtyp.report_unification_error ppf env trace
-        (function ppf ->
+        (fun ppf ->
            fprintf ppf "This type constructor expands to type")
-        (function ppf ->
+        (fun ppf ->
            fprintf ppf "but is used here with type")
   | Null_arity_external ->
       fprintf ppf "External identifiers must be functions"
