--- /home/chetsky/Hack/Ocaml/GENERIC/4.01.0/.opam-switch/sources/ocaml-base-compiler.4.01.0/testsuite/tests/misc/boyer.ml	2012-10-15 10:50:56.000000000 -0700
+++ patches/ocaml-4.01.0/ALL/testsuite!tests!misc!boyer.ml.INPUT	2020-02-15 23:05:01.306807516 -0800
@@ -114,8 +114,8 @@
   | CProp(p, l) -> Prop(get p, List.map cterm_to_term l)
 
 let add t = add_lemma (cterm_to_term t)
+;;
 
-let _ =
 add (CProp
 ("equal",
  [CProp ("compile",[CVar 5]);
@@ -780,7 +780,7 @@
   ("if",
    [CProp ("eqp",[CVar 9; CVar 8]); CVar 21;
     CProp ("get",[CVar 9; CVar 12])])]))
-
+;;
 (* Tautology checker *)
 
 let truep x lst =
@@ -877,8 +877,8 @@
                    [CProp ("implies",[CVar 25; CVar 20]);
                     CProp ("implies",[CVar 20; CVar 22])])])]);
               CProp ("implies",[CVar 23; CVar 22])]))
+;;
 
-let _ =
   let ok = ref true in
   for i = 1 to 50 do
     if not (tautp (apply_subst subst term)) then ok := false
@@ -888,7 +888,7 @@
   else
     print_string "Cannot prove!\n";
   exit 0
-
+;;
 (*********
 with
     failure s ->
