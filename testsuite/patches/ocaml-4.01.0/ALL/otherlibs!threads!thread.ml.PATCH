--- /home/chetsky/Hack/Ocaml/GENERIC/4.01.0/.opam-switch/sources/ocaml-base-compiler.4.01.0/otherlibs/threads/thread.ml	2013-07-23 07:48:47.000000000 -0700
+++ patches/ocaml-4.01.0/ALL/otherlibs!threads!thread.ml.INPUT	2020-02-15 22:12:23.748807516 -0800
@@ -25,12 +25,12 @@
   | Resumed_select of
       Unix.file_descr list * Unix.file_descr list * Unix.file_descr list
   | Resumed_wait of int * Unix.process_status
-
+;;
 (* to avoid warning *)
-let _ = [Resumed_wakeup; Resumed_delay; Resumed_join;
+[Resumed_wakeup; Resumed_delay; Resumed_join;
          Resumed_io; Resumed_select ([], [], []);
          Resumed_wait (0, Unix.WEXITED 0)]
-
+;;
 (* It is mucho important that the primitives that reschedule are called
    through an ML function call, not directly. That's because when such a
    primitive returns, the bytecode interpreter is only semi-obedient:
@@ -136,10 +136,10 @@
 
 let preempt signal =
   if !critical_section then () else thread_request_reschedule()
-
+;;
 (* Initialization of the scheduler *)
 
-let _ =
   thread_initialize();
   Sys.set_signal Sys.sigvtalrm (Sys.Signal_handle preempt);
   thread_initialize_preemption()
+;;
