(* camlp5r *)
(* This file has been generated by program: do not edit! *)
(* Copyright (c) INRIA 2007 *)

(** Conversion between Camlp5 AST into OCaml AST *)

val interf : string -> MLast.sig_item list -> Parsetree.signature;;
   (** [interf fname ast] return the OCaml equivalent AST of an
       interface (mli file), [fname] being the input file name. *)
val implem : string -> MLast.str_item list -> Parsetree.structure;;
   (** [implem fname ast] return the OCaml equivalent AST of an
       implementation (ml file), [fname] being the input file name. *)
val phrase : MLast.str_item -> Parsetree.toplevel_phrase;;
   (** [phrase sil] return the OCaml equivalent AST of a toplevel phrase. *)

val mkloc : Stdpp.location -> Location.t;;
   (** Convert a Camlp5 location into a OCaml location. *)

val fast : bool ref;;
   (** Flag to generate fast (unsafe) access to arrays. Default: False. *)
val no_constructors_arity : bool ref;;
   (** Flag to generate nodes telling that constructor arity is not taken
       into account in the AST (e.g. True for normal syntax, False for
       revised syntax). Default: False. *)
